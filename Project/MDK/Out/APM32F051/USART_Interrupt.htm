<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Out\APM32F051\USART_Interrupt.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Out\APM32F051\USART_Interrupt.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5050106: Last Updated: Wed Nov 29 14:41:44 2023
<BR><P>
<H3>Maximum Stack Usage =        156 bytes + Unknown(Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
main &rArr; DF_Protocol_Parse &rArr; set_Band_Handler &rArr; USART1_Init &rArr; USART_Config &rArr; RCM_ReadUSART2CLKFreq &rArr; RCM_ReadPCLKFreq &rArr; RCM_ReadSYSCLKFreq &rArr; __aeabi_uidivmod
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[22]">CEC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22]">CEC_IRQHandler</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[12]">ADC1_COMP_IRQHandler</a> from apm32f0xx_int.o(i.ADC1_COMP_IRQHandler) referenced from startup_apm32f051.o(RESET)
 <LI><a href="#[22]">CEC_IRQHandler</a> from startup_apm32f051.o(.text) referenced from startup_apm32f051.o(RESET)
 <LI><a href="#[f]">DMA1_CH1_IRQHandler</a> from startup_apm32f051.o(.text) referenced from startup_apm32f051.o(RESET)
 <LI><a href="#[10]">DMA1_CH2_3_IRQHandler</a> from startup_apm32f051.o(.text) referenced from startup_apm32f051.o(RESET)
 <LI><a href="#[11]">DMA1_CH4_5_IRQHandler</a> from startup_apm32f051.o(.text) referenced from startup_apm32f051.o(RESET)
 <LI><a href="#[b]">EINT0_1_IRQHandler</a> from startup_apm32f051.o(.text) referenced from startup_apm32f051.o(RESET)
 <LI><a href="#[c]">EINT2_3_IRQHandler</a> from startup_apm32f051.o(.text) referenced from startup_apm32f051.o(RESET)
 <LI><a href="#[d]">EINT4_15_IRQHandler</a> from startup_apm32f051.o(.text) referenced from startup_apm32f051.o(RESET)
 <LI><a href="#[9]">FLASH_IRQHandler</a> from startup_apm32f051.o(.text) referenced from startup_apm32f051.o(RESET)
 <LI><a href="#[2]">HardFault_Handler</a> from apm32f0xx_int.o(i.HardFault_Handler) referenced from startup_apm32f051.o(RESET)
 <LI><a href="#[1c]">I2C1_IRQHandler</a> from startup_apm32f051.o(.text) referenced from startup_apm32f051.o(RESET)
 <LI><a href="#[1d]">I2C2_IRQHandler</a> from startup_apm32f051.o(.text) referenced from startup_apm32f051.o(RESET)
 <LI><a href="#[1]">NMI_Handler</a> from apm32f0xx_int.o(i.NMI_Handler) referenced from startup_apm32f051.o(RESET)
 <LI><a href="#[7]">PVD_IRQHandler</a> from startup_apm32f051.o(.text) referenced from startup_apm32f051.o(RESET)
 <LI><a href="#[4]">PendSV_Handler</a> from apm32f0xx_int.o(i.PendSV_Handler) referenced from startup_apm32f051.o(RESET)
 <LI><a href="#[a]">RCM_IRQHandler</a> from startup_apm32f051.o(.text) referenced from startup_apm32f051.o(RESET)
 <LI><a href="#[8]">RTC_IRQHandler</a> from startup_apm32f051.o(.text) referenced from startup_apm32f051.o(RESET)
 <LI><a href="#[0]">Reset_Handler</a> from startup_apm32f051.o(.text) referenced from startup_apm32f051.o(RESET)
 <LI><a href="#[1e]">SPI1_IRQHandler</a> from startup_apm32f051.o(.text) referenced from startup_apm32f051.o(RESET)
 <LI><a href="#[1f]">SPI2_IRQHandler</a> from startup_apm32f051.o(.text) referenced from startup_apm32f051.o(RESET)
 <LI><a href="#[3]">SVC_Handler</a> from apm32f0xx_int.o(i.SVC_Handler) referenced from startup_apm32f051.o(RESET)
 <LI><a href="#[5]">SysTick_Handler</a> from apm32f0xx_int.o(i.SysTick_Handler) referenced from startup_apm32f051.o(RESET)
 <LI><a href="#[24]">SystemInit</a> from system_apm32f0xx.o(i.SystemInit) referenced from startup_apm32f051.o(.text)
 <LI><a href="#[18]">TMR14_IRQHandler</a> from apm32f0xx_int.o(i.TMR14_IRQHandler) referenced from startup_apm32f051.o(RESET)
 <LI><a href="#[19]">TMR15_IRQHandler</a> from startup_apm32f051.o(.text) referenced from startup_apm32f051.o(RESET)
 <LI><a href="#[1a]">TMR16_IRQHandler</a> from startup_apm32f051.o(.text) referenced from startup_apm32f051.o(RESET)
 <LI><a href="#[1b]">TMR17_IRQHandler</a> from startup_apm32f051.o(.text) referenced from startup_apm32f051.o(RESET)
 <LI><a href="#[13]">TMR1_BRK_UP_TRG_COM_IRQHandler</a> from startup_apm32f051.o(.text) referenced from startup_apm32f051.o(RESET)
 <LI><a href="#[14]">TMR1_CC_IRQHandler</a> from startup_apm32f051.o(.text) referenced from startup_apm32f051.o(RESET)
 <LI><a href="#[15]">TMR2_IRQHandler</a> from apm32f0xx_int.o(i.TMR2_IRQHandler) referenced from startup_apm32f051.o(RESET)
 <LI><a href="#[16]">TMR3_IRQHandler</a> from apm32f0xx_int.o(i.TMR3_IRQHandler) referenced from startup_apm32f051.o(RESET)
 <LI><a href="#[17]">TMR6_DAC_IRQHandler</a> from startup_apm32f051.o(.text) referenced from startup_apm32f051.o(RESET)
 <LI><a href="#[e]">TSC_IRQHandler</a> from startup_apm32f051.o(.text) referenced from startup_apm32f051.o(RESET)
 <LI><a href="#[20]">USART1_IRQHandler</a> from apm32f0xx_int.o(i.USART1_IRQHandler) referenced from startup_apm32f051.o(RESET)
 <LI><a href="#[21]">USART2_IRQHandler</a> from startup_apm32f051.o(.text) referenced from startup_apm32f051.o(RESET)
 <LI><a href="#[6]">WWDT_IRQHandler</a> from startup_apm32f051.o(.text) referenced from startup_apm32f051.o(RESET)
 <LI><a href="#[25]">__main</a> from entry.o(.ARM.Collect$$$$00000000) referenced from startup_apm32f051.o(.text)
 <LI><a href="#[26]">fputc</a> from main.o(i.fputc) referenced from printf1.o(i.__0printf$1)
 <LI><a href="#[23]">main</a> from main.o(i.main) referenced from entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[25]"></a>__main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry.o(.ARM.Collect$$$$00000000))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f051.o(.text)
</UL>
<P><STRONG><a name="[ae]"></a>_main_stk</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry2.o(.ARM.Collect$$$$00000001))

<P><STRONG><a name="[27]"></a>_main_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[39]"></a>__main_after_scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry5.o(.ARM.Collect$$$$00000004))
<BR><BR>[Called By]<UL><LI><a href="#[28]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[af]"></a>_main_clock</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry7b.o(.ARM.Collect$$$$00000008))

<P><STRONG><a name="[b0]"></a>_main_cpp_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry8b.o(.ARM.Collect$$$$0000000A))

<P><STRONG><a name="[b1]"></a>_main_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry9a.o(.ARM.Collect$$$$0000000B))

<P><STRONG><a name="[b2]"></a>__rt_final_cpp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry10a.o(.ARM.Collect$$$$0000000D))

<P><STRONG><a name="[b3]"></a>__rt_final_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, entry11a.o(.ARM.Collect$$$$0000000F))

<P><STRONG><a name="[0]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_apm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f051.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>CEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f051.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CEC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;CEC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f051.o(RESET)
</UL>
<P><STRONG><a name="[f]"></a>DMA1_CH1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f051.o(RESET)
</UL>
<P><STRONG><a name="[10]"></a>DMA1_CH2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f051.o(RESET)
</UL>
<P><STRONG><a name="[11]"></a>DMA1_CH4_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f051.o(RESET)
</UL>
<P><STRONG><a name="[b]"></a>EINT0_1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f051.o(RESET)
</UL>
<P><STRONG><a name="[c]"></a>EINT2_3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f051.o(RESET)
</UL>
<P><STRONG><a name="[d]"></a>EINT4_15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f051.o(RESET)
</UL>
<P><STRONG><a name="[9]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f051.o(RESET)
</UL>
<P><STRONG><a name="[1c]"></a>I2C1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f051.o(RESET)
</UL>
<P><STRONG><a name="[1d]"></a>I2C2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f051.o(RESET)
</UL>
<P><STRONG><a name="[7]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f051.o(RESET)
</UL>
<P><STRONG><a name="[a]"></a>RCM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f051.o(RESET)
</UL>
<P><STRONG><a name="[8]"></a>RTC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f051.o(RESET)
</UL>
<P><STRONG><a name="[1e]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f051.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f051.o(RESET)
</UL>
<P><STRONG><a name="[19]"></a>TMR15_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f051.o(RESET)
</UL>
<P><STRONG><a name="[1a]"></a>TMR16_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f051.o(RESET)
</UL>
<P><STRONG><a name="[1b]"></a>TMR17_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f051.o(RESET)
</UL>
<P><STRONG><a name="[13]"></a>TMR1_BRK_UP_TRG_COM_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f051.o(RESET)
</UL>
<P><STRONG><a name="[14]"></a>TMR1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f051.o(RESET)
</UL>
<P><STRONG><a name="[17]"></a>TMR6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f051.o(RESET)
</UL>
<P><STRONG><a name="[e]"></a>TSC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f051.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f051.o(RESET)
</UL>
<P><STRONG><a name="[6]"></a>WWDT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_apm32f051.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f051.o(RESET)
</UL>
<P><STRONG><a name="[b4]"></a>__aeabi_uidiv</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, uidiv.o(.text), UNUSED)

<P><STRONG><a name="[2a]"></a>__aeabi_uidivmod</STRONG> (Thumb, 44 bytes, Stack size 12 bytes, uidiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = __aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_ReadSYSCLKFreq
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config
<LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetVs
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APM_EVAL_DelayInit
</UL>

<P><STRONG><a name="[b5]"></a>__aeabi_idiv</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, idiv.o(.text), UNUSED)

<P><STRONG><a name="[29]"></a>__aeabi_idivmod</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, idiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = __aeabi_idivmod &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_Temp
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetVs
</UL>

<P><STRONG><a name="[2b]"></a>__aeabi_ldivmod</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, ldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = __aeabi_ldivmod &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR2_IRQHandler
</UL>

<P><STRONG><a name="[2d]"></a>__aeabi_lmul</STRONG> (Thumb, 122 bytes, Stack size 64 bytes, llmul.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_lmul &rArr; __aeabi_llsl
</UL>
<BR>[Calls]<UL><LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR2_IRQHandler
</UL>

<P><STRONG><a name="[b6]"></a>_ll_mul</STRONG> (Thumb, 0 bytes, Stack size 64 bytes, llmul.o(.text), UNUSED)

<P><STRONG><a name="[ac]"></a>__aeabi_memcpy</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writePage
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readPage
</UL>

<P><STRONG><a name="[a3]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appFlagInit
</UL>

<P><STRONG><a name="[b7]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memcpya.o(.text), UNUSED)

<P><STRONG><a name="[30]"></a>__aeabi_memset</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[31]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset$wrapper
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
</UL>

<P><STRONG><a name="[b8]"></a>__aeabi_memset4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[b9]"></a>__aeabi_memset8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[2f]"></a>__aeabi_memclr</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_Protocol_Parse
</UL>

<P><STRONG><a name="[aa]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_Temp
</UL>

<P><STRONG><a name="[ba]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, memseta.o(.text), UNUSED)

<P><STRONG><a name="[31]"></a>_memset$wrapper</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, memseta.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[30]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[6b]"></a>__aeabi_uread4</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, uread4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parameters_Setup
</UL>

<P><STRONG><a name="[bb]"></a>__rt_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[bc]"></a>_uread4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uread4.o(.text), UNUSED)

<P><STRONG><a name="[6c]"></a>__aeabi_uwrite4</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, uwrite4.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_Band_Handler
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Restore_Check
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parameters_Setup
</UL>

<P><STRONG><a name="[bd]"></a>__rt_uwrite4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uwrite4.o(.text), UNUSED)

<P><STRONG><a name="[be]"></a>_uwrite4</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, uwrite4.o(.text), UNUSED)

<P><STRONG><a name="[32]"></a>__aeabi_ddiv</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, ddiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = __aeabi_ddiv &rArr; _double_round
</UL>
<BR>[Calls]<UL><LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[34]"></a>__aeabi_ui2d</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, dfltui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_ui2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[36]"></a>__aeabi_d2uiz</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, dfixui.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_d2uiz &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[2c]"></a>__aeabi_uldivmod</STRONG> (Thumb, 96 bytes, Stack size 48 bytes, uldiv.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
</UL>

<P><STRONG><a name="[2e]"></a>__aeabi_llsl</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, llshl.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsl
</UL>
<BR>[Called By]<UL><LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[bf]"></a>_ll_shift_l</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llshl.o(.text), UNUSED)

<P><STRONG><a name="[37]"></a>__aeabi_llsr</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, llushr.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_llsr
</UL>
<BR>[Called By]<UL><LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
<LI><a href="#[2c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uldivmod
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[c0]"></a>_ll_ushift_r</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, llushr.o(.text), UNUSED)

<P><STRONG><a name="[c1]"></a>__I$use$fp</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, iusefp.o(.text), UNUSED)

<P><STRONG><a name="[33]"></a>_double_round</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[35]"></a>_double_epilogue</STRONG> (Thumb, 164 bytes, Stack size 48 bytes, depilogue.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[38]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_clz
<LI><a href="#[37]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsr
<LI><a href="#[2e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_llsl
<LI><a href="#[33]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_round
</UL>
<BR>[Called By]<UL><LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
</UL>

<P><STRONG><a name="[28]"></a>__scatterload</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, init.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main_after_scatterload
</UL>
<BR>[Called By]<UL><LI><a href="#[27]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_main_scatterload
</UL>

<P><STRONG><a name="[c2]"></a>__scatterload_rt2</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, init.o(.text), UNUSED)

<P><STRONG><a name="[3a]"></a>ACMP_setup</STRONG> (Thumb, 218 bytes, Stack size 24 bytes, setup.o(i.ACMP_setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = ACMP_setup &rArr; GPIO_ConfigPinAF
</UL>
<BR>[Calls]<UL><LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigStructInit
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigPinAF
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Config
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMP_Disable
<LI><a href="#[3e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMP_ConfigStructInit
<LI><a href="#[3f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMP_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[12]"></a>ADC1_COMP_IRQHandler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, apm32f0xx_int.o(i.ADC1_COMP_IRQHandler))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f051.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>ADC_Config</STRONG> (Thumb, 142 bytes, Stack size 0 bytes, apm32f0xx_adc.o(i.ADC_Config))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_setup
</UL>

<P><STRONG><a name="[48]"></a>ADC_ConfigChannel</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, apm32f0xx_adc.o(i.ADC_ConfigChannel))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_setup
</UL>

<P><STRONG><a name="[46]"></a>ADC_ConfigStructInit</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, apm32f0xx_adc.o(i.ADC_ConfigStructInit))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_setup
</UL>

<P><STRONG><a name="[4a]"></a>ADC_Enable</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, apm32f0xx_adc.o(i.ADC_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_setup
</UL>

<P><STRONG><a name="[49]"></a>ADC_ReadCalibrationFactor</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, apm32f0xx_adc.o(i.ADC_ReadCalibrationFactor))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_ReadCalibrationFactor
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_setup
</UL>

<P><STRONG><a name="[7e]"></a>ADC_ReadConversionValue</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, apm32f0xx_adc.o(i.ADC_ReadConversionValue))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_Temp
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetVs
</UL>

<P><STRONG><a name="[41]"></a>ADC_Reset</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, apm32f0xx_adc.o(i.ADC_Reset))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = ADC_Reset
</UL>
<BR>[Calls]<UL><LI><a href="#[42]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_EnableAPB2PeriphReset
<LI><a href="#[43]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_DisableAPB2PeriphReset
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_setup
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_Temp
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetVs
</UL>

<P><STRONG><a name="[7d]"></a>ADC_StartConversion</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, apm32f0xx_adc.o(i.ADC_StartConversion))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_Temp
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetVs
</UL>

<P><STRONG><a name="[7f]"></a>ADC_StopConversion</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, apm32f0xx_adc.o(i.ADC_StopConversion))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_Temp
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetVs
</UL>

<P><STRONG><a name="[44]"></a>ADC_setup</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, setup.o(i.ADC_setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = ADC_setup &rArr; GPIO_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_EnableAPB2PeriphClock
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Config
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Reset
<LI><a href="#[49]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ReadCalibrationFactor
<LI><a href="#[4a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Enable
<LI><a href="#[46]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ConfigStructInit
<LI><a href="#[48]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ConfigChannel
<LI><a href="#[47]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_Temp
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetVs
</UL>

<P><STRONG><a name="[4b]"></a>APM_EVAL_DelayInit</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, bsp_delay.o(i.APM_EVAL_DelayInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = APM_EVAL_DelayInit &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[4c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_ConfigCLKSource
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[73]"></a>APM_EVAL_DelayMs</STRONG> (Thumb, 72 bytes, Stack size 8 bytes, bsp_delay.o(i.APM_EVAL_DelayMs))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = APM_EVAL_DelayMs
</UL>
<BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_Temp
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetVs
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Restore_Check
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4d]"></a>APM_EVAL_TMR14_Init</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, setup.o(i.APM_EVAL_TMR14_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = APM_EVAL_TMR14_Init &rArr; NVIC_EnableIRQRequest &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_EnableAPB1PeriphClock
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQRequest
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_EnableInterrupt
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_Enable
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ConfigTimeBase
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3f]"></a>COMP_Config</STRONG> (Thumb, 246 bytes, Stack size 8 bytes, apm32f0xx_comp.o(i.COMP_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = COMP_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACMP_setup
</UL>

<P><STRONG><a name="[3e]"></a>COMP_ConfigStructInit</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, apm32f0xx_comp.o(i.COMP_ConfigStructInit))
<BR><BR>[Called By]<UL><LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACMP_setup
</UL>

<P><STRONG><a name="[40]"></a>COMP_Disable</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, apm32f0xx_comp.o(i.COMP_Disable))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_Dis
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACMP_setup
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR2_IRQHandler
</UL>

<P><STRONG><a name="[8f]"></a>COMP_Enable</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, apm32f0xx_comp.o(i.COMP_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR3_IRQHandler
</UL>

<P><STRONG><a name="[54]"></a>DAC_Config</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, apm32f0xx_dac.o(i.DAC_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DAC_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_setup
</UL>

<P><STRONG><a name="[56]"></a>DAC_ConfigChannel1Data</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, apm32f0xx_dac.o(i.DAC_ConfigChannel1Data))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = DAC_ConfigChannel1Data
</UL>
<BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_setup
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR3_IRQHandler
</UL>

<P><STRONG><a name="[a8]"></a>DAC_Disable</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, apm32f0xx_dac.o(i.DAC_Disable))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_Dis
</UL>

<P><STRONG><a name="[55]"></a>DAC_Enable</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, apm32f0xx_dac.o(i.DAC_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_Dis
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_setup
</UL>

<P><STRONG><a name="[53]"></a>DAC_setup</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, setup.o(i.DAC_setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = DAC_setup &rArr; GPIO_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_EnableAPB1PeriphClock
<LI><a href="#[3c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigStructInit
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Config
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_Enable
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_ConfigChannel1Data
<LI><a href="#[54]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[57]"></a>DF_Protocol_Parse</STRONG> (Thumb, 214 bytes, Stack size 8 bytes, df_protocol.o(i.DF_Protocol_Parse))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = DF_Protocol_Parse &rArr; set_Band_Handler &rArr; USART1_Init &rArr; USART_Config &rArr; RCM_ReadUSART2CLKFreq &rArr; RCM_ReadPCLKFreq &rArr; RCM_ReadSYSCLKFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBit
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearBit
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[2f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr
<LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_Band_Handler
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_Addr_Handler
<LI><a href="#[5f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mystrstr
<LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_Temp_Handler
<LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_Dis_Handler
<LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_RxMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[61]"></a>FMC_ErasePage</STRONG> (Thumb, 74 bytes, Stack size 12 bytes, apm32f0xx_fmc.o(i.FMC_ErasePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FMC_ErasePage &rArr; FMC_WaitForReady
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_WaitForReady
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writePage
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appFlagInit
</UL>

<P><STRONG><a name="[a5]"></a>FMC_Lock</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, apm32f0xx_fmc.o(i.FMC_Lock))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writePage
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appFlagInit
</UL>

<P><STRONG><a name="[63]"></a>FMC_ProgramWord</STRONG> (Thumb, 80 bytes, Stack size 16 bytes, apm32f0xx_fmc.o(i.FMC_ProgramWord))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = FMC_ProgramWord &rArr; FMC_WaitForReady
</UL>
<BR>[Calls]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_WaitForReady
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writePage
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appFlagInit
</UL>

<P><STRONG><a name="[64]"></a>FMC_ReadState</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, apm32f0xx_fmc.o(i.FMC_ReadState))
<BR><BR>[Called By]<UL><LI><a href="#[62]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_WaitForReady
</UL>

<P><STRONG><a name="[a4]"></a>FMC_Unlock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, apm32f0xx_fmc.o(i.FMC_Unlock))
<BR><BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writePage
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appFlagInit
</UL>

<P><STRONG><a name="[62]"></a>FMC_WaitForReady</STRONG> (Thumb, 28 bytes, Stack size 4 bytes, apm32f0xx_fmc.o(i.FMC_WaitForReady))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = FMC_WaitForReady
</UL>
<BR>[Calls]<UL><LI><a href="#[64]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_ReadState
</UL>
<BR>[Called By]<UL><LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_ProgramWord
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_ErasePage
</UL>

<P><STRONG><a name="[5e]"></a>GPIO_ClearBit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, apm32f0xx_gpio.o(i.GPIO_ClearBit))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_Temp
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetVs
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_40K
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_Dis
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_setup
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_Protocol_Parse
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[3d]"></a>GPIO_Config</STRONG> (Thumb, 138 bytes, Stack size 16 bytes, apm32f0xx_gpio.o(i.GPIO_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GPIO_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_setup
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_40K
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_Dis
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Restore_Check
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_setup
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_setup
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACMP_setup
</UL>

<P><STRONG><a name="[3b]"></a>GPIO_ConfigPinAF</STRONG> (Thumb, 70 bytes, Stack size 20 bytes, apm32f0xx_gpio.o(i.GPIO_ConfigPinAF))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = GPIO_ConfigPinAF
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACMP_setup
</UL>

<P><STRONG><a name="[3c]"></a>GPIO_ConfigStructInit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, apm32f0xx_gpio.o(i.GPIO_ConfigStructInit))
<BR><BR>[Called By]<UL><LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_setup
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACMP_setup
</UL>

<P><STRONG><a name="[59]"></a>GPIO_SetBit</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, apm32f0xx_gpio.o(i.GPIO_SetBit))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_Temp
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetVs
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_40K
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_Protocol_Parse
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>

<P><STRONG><a name="[65]"></a>GPIO_setup</STRONG> (Thumb, 252 bytes, Stack size 16 bytes, setup.o(i.GPIO_setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = GPIO_setup &rArr; GPIO_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[66]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_EnableAHBPeriphClock
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Config
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearBit
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2]"></a>HardFault_Handler</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, apm32f0xx_int.o(i.HardFault_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HardFault_Handler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBit
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f051.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>Load_RxMessage</STRONG> (Thumb, 128 bytes, Stack size 4 bytes, df_protocol.o(i.Load_RxMessage))
<BR><BR>[Stack]<UL><LI>Max Depth = 4<LI>Call Chain = Load_RxMessage
</UL>
<BR>[Calls]<UL><LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_RxMessage
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_Protocol_Parse
</UL>

<P><STRONG><a name="[1]"></a>NMI_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, apm32f0xx_int.o(i.NMI_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = NMI_Handler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f051.o(RESET)
</UL>
<P><STRONG><a name="[88]"></a>NVIC_DisableIRQRequest</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, apm32f0xx_misc.o(i.NVIC_DisableIRQRequest))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_Dis
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER3_setup
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_setup
</UL>

<P><STRONG><a name="[51]"></a>NVIC_EnableIRQRequest</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, apm32f0xx_misc.o(i.NVIC_EnableIRQRequest))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = NVIC_EnableIRQRequest &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[68]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_Dis
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APM_EVAL_TMR14_Init
</UL>

<P><STRONG><a name="[69]"></a>Parameters_Setup</STRONG> (Thumb, 106 bytes, Stack size 8 bytes, func.o(i.Parameters_Setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = Parameters_Setup &rArr; writePage &rArr; FMC_ProgramWord &rArr; FMC_WaitForReady
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writePage
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readPage
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
<LI><a href="#[6b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uread4
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[4]"></a>PendSV_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, apm32f0xx_int.o(i.PendSV_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PendSV_Handler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f051.o(RESET)
</UL>
<P><STRONG><a name="[80]"></a>RCM_DisableAPB2PeriphClock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, apm32f0xx_rcm.o(i.RCM_DisableAPB2PeriphClock))
<BR><BR>[Called By]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_Temp
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetVs
</UL>

<P><STRONG><a name="[43]"></a>RCM_DisableAPB2PeriphReset</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, apm32f0xx_rcm.o(i.RCM_DisableAPB2PeriphReset))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Reset
</UL>

<P><STRONG><a name="[66]"></a>RCM_EnableAHBPeriphClock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, apm32f0xx_rcm.o(i.RCM_EnableAHBPeriphClock))
<BR><BR>[Called By]<UL><LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_setup
</UL>

<P><STRONG><a name="[4e]"></a>RCM_EnableAPB1PeriphClock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, apm32f0xx_rcm.o(i.RCM_EnableAPB1PeriphClock))
<BR><BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER3_setup
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_setup
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_setup
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APM_EVAL_TMR14_Init
</UL>

<P><STRONG><a name="[45]"></a>RCM_EnableAPB2PeriphClock</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, apm32f0xx_rcm.o(i.RCM_EnableAPB2PeriphClock))
<BR><BR>[Called By]<UL><LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_setup
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[42]"></a>RCM_EnableAPB2PeriphReset</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, apm32f0xx_rcm.o(i.RCM_EnableAPB2PeriphReset))
<BR><BR>[Called By]<UL><LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Reset
</UL>

<P><STRONG><a name="[6e]"></a>RCM_ReadPCLKFreq</STRONG> (Thumb, 38 bytes, Stack size 24 bytes, apm32f0xx_rcm.o(i.RCM_ReadPCLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = RCM_ReadPCLKFreq &rArr; RCM_ReadSYSCLKFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_ReadSYSCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_ReadUSART2CLKFreq
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_ReadUSART1CLKFreq
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config
</UL>

<P><STRONG><a name="[6f]"></a>RCM_ReadSYSCLKFreq</STRONG> (Thumb, 146 bytes, Stack size 24 bytes, apm32f0xx_rcm.o(i.RCM_ReadSYSCLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = RCM_ReadSYSCLKFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_ReadUSART2CLKFreq
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_ReadUSART1CLKFreq
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_ReadPCLKFreq
</UL>

<P><STRONG><a name="[70]"></a>RCM_ReadUSART1CLKFreq</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, apm32f0xx_rcm.o(i.RCM_ReadUSART1CLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = RCM_ReadUSART1CLKFreq &rArr; RCM_ReadPCLKFreq &rArr; RCM_ReadSYSCLKFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_ReadSYSCLKFreq
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_ReadPCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config
</UL>

<P><STRONG><a name="[71]"></a>RCM_ReadUSART2CLKFreq</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, apm32f0xx_rcm.o(i.RCM_ReadUSART2CLKFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = RCM_ReadUSART2CLKFreq &rArr; RCM_ReadPCLKFreq &rArr; RCM_ReadSYSCLKFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_ReadSYSCLKFreq
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_ReadPCLKFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config
</UL>

<P><STRONG><a name="[72]"></a>Restore_Check</STRONG> (Thumb, 218 bytes, Stack size 16 bytes, func.o(i.Restore_Check))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = Restore_Check &rArr; writePage &rArr; FMC_ProgramWord &rArr; FMC_WaitForReady
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Config
<LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writePage
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APM_EVAL_DelayMs
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[75]"></a>Ret_Checksum_Cal</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, df_protocol.o(i.Ret_Checksum_Cal))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = Ret_Checksum_Cal
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Return_SetBand
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Return_SetAddr
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Return_GetTemp
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Return_GetDis
</UL>

<P><STRONG><a name="[74]"></a>Return_GetDis</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, df_protocol.o(i.Return_GetDis))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = Return_GetDis &rArr; USART_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Write
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ret_Checksum_Cal
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_Dis_Handler
</UL>

<P><STRONG><a name="[77]"></a>Return_GetTemp</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, df_protocol.o(i.Return_GetTemp))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Return_GetTemp &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Write
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ret_Checksum_Cal
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_Temp_Handler
</UL>

<P><STRONG><a name="[78]"></a>Return_SetAddr</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, df_protocol.o(i.Return_SetAddr))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Return_SetAddr &rArr; USART_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Write
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ret_Checksum_Cal
</UL>
<BR>[Called By]<UL><LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_Addr_Handler
</UL>

<P><STRONG><a name="[79]"></a>Return_SetBand</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, df_protocol.o(i.Return_SetBand))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Return_SetBand &rArr; USART_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReadStatusFlag
<LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Write
<LI><a href="#[75]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Ret_Checksum_Cal
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_Band_Handler
</UL>

<P><STRONG><a name="[3]"></a>SVC_Handler</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, apm32f0xx_int.o(i.SVC_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = SVC_Handler &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f051.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>Send_40K</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, func.o(i.Send_40K))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Send_40K &rArr; GPIO_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBit
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Config
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearBit
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_Dis
</UL>

<P><STRONG><a name="[7c]"></a>SetVs</STRONG> (Thumb, 224 bytes, Stack size 24 bytes, func.o(i.SetVs))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = SetVs &rArr; ADC_setup &rArr; GPIO_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_DisableAPB2PeriphClock
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBit
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearBit
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StopConversion
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartConversion
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Reset
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ReadConversionValue
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_setup
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APM_EVAL_DelayMs
</UL>
<BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_Dis
</UL>

<P><STRONG><a name="[4c]"></a>SysTick_ConfigCLKSource</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, apm32f0xx_misc.o(i.SysTick_ConfigCLKSource))
<BR><BR>[Called By]<UL><LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APM_EVAL_DelayInit
</UL>

<P><STRONG><a name="[5]"></a>SysTick_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, apm32f0xx_int.o(i.SysTick_Handler))
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f051.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>SystemInit</STRONG> (Thumb, 120 bytes, Stack size 8 bytes, system_apm32f0xx.o(i.SystemInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = SystemInit &rArr; SystemClockConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClockConfig
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f051.o(.text)
</UL>
<P><STRONG><a name="[83]"></a>TIMER2_setup</STRONG> (Thumb, 116 bytes, Stack size 32 bytes, setup.o(i.TIMER2_setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = TIMER2_setup &rArr; TMR_ICConfig &rArr; TI4Config
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_EnableAPB1PeriphClock
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQRequest
<LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ICConfig
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_DisableInterrupt
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_DisableCCxChannel
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_Disable
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ConfigTimeBase
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[89]"></a>TIMER3_setup</STRONG> (Thumb, 70 bytes, Stack size 24 bytes, setup.o(i.TIMER3_setup))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = TIMER3_setup &rArr; TMR_ConfigTimeBase
</UL>
<BR>[Calls]<UL><LI><a href="#[4e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_EnableAPB1PeriphClock
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQRequest
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_DisableInterrupt
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_Disable
<LI><a href="#[4f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ConfigTimeBase
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[18]"></a>TMR14_IRQHandler</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, apm32f0xx_int.o(i.TMR14_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TMR14_IRQHandler
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ReadIntFlag
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ClearIntFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f051.o(RESET)
</UL>
<P><STRONG><a name="[15]"></a>TMR2_IRQHandler</STRONG> (Thumb, 460 bytes, Stack size 40 bytes, apm32f0xx_int.o(i.TMR2_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = TMR2_IRQHandler &rArr; __aeabi_ldivmod &rArr; __aeabi_uldivmod &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ReadIntFlag
<LI><a href="#[8c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ReadCaputer4
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_DisableCCxChannel
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_Disable
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ClearIntFlag
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMP_Disable
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[2d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_lmul
<LI><a href="#[2b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ldivmod
<LI><a href="#[8d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_ll_muluu
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f051.o(RESET)
</UL>
<P><STRONG><a name="[16]"></a>TMR3_IRQHandler</STRONG> (Thumb, 1074 bytes, Stack size 8 bytes, apm32f0xx_int.o(i.TMR3_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = TMR3_IRQHandler &rArr; DAC_ConfigChannel1Data
</UL>
<BR>[Calls]<UL><LI><a href="#[8a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ReadIntFlag
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_EnableInterrupt
<LI><a href="#[90]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_EnableCCxChannel
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ClearStatusFlag
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ClearIntFlag
<LI><a href="#[56]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_ConfigChannel1Data
<LI><a href="#[8f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMP_Enable
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f051.o(RESET)
</UL>
<P><STRONG><a name="[8b]"></a>TMR_ClearIntFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apm32f0xx_tmr.o(i.TMR_ClearIntFlag))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_Dis
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR3_IRQHandler
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR2_IRQHandler
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR14_IRQHandler
</UL>

<P><STRONG><a name="[91]"></a>TMR_ClearStatusFlag</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, apm32f0xx_tmr.o(i.TMR_ClearStatusFlag))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_Dis
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR3_IRQHandler
</UL>

<P><STRONG><a name="[4f]"></a>TMR_ConfigTimeBase</STRONG> (Thumb, 128 bytes, Stack size 8 bytes, apm32f0xx_tmr.o(i.TMR_ConfigTimeBase))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TMR_ConfigTimeBase
</UL>
<BR>[Called By]<UL><LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER3_setup
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_setup
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APM_EVAL_TMR14_Init
</UL>

<P><STRONG><a name="[84]"></a>TMR_Disable</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, apm32f0xx_tmr.o(i.TMR_Disable))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_Dis
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER3_setup
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_setup
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR2_IRQHandler
</UL>

<P><STRONG><a name="[86]"></a>TMR_DisableCCxChannel</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, apm32f0xx_tmr.o(i.TMR_DisableCCxChannel))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_Dis
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_setup
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR2_IRQHandler
</UL>

<P><STRONG><a name="[87]"></a>TMR_DisableInterrupt</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, apm32f0xx_tmr.o(i.TMR_DisableInterrupt))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_Dis
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER3_setup
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_setup
</UL>

<P><STRONG><a name="[52]"></a>TMR_Enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, apm32f0xx_tmr.o(i.TMR_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_Dis
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APM_EVAL_TMR14_Init
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[90]"></a>TMR_EnableCCxChannel</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, apm32f0xx_tmr.o(i.TMR_EnableCCxChannel))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR3_IRQHandler
</UL>

<P><STRONG><a name="[50]"></a>TMR_EnableInterrupt</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, apm32f0xx_tmr.o(i.TMR_EnableInterrupt))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_Dis
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APM_EVAL_TMR14_Init
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR3_IRQHandler
</UL>

<P><STRONG><a name="[85]"></a>TMR_ICConfig</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, apm32f0xx_tmr.o(i.TMR_ICConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = TMR_ICConfig &rArr; TI4Config
</UL>
<BR>[Calls]<UL><LI><a href="#[99]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_SetIC4Prescal
<LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_SetIC3Prescal
<LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_SetIC2Prescal
<LI><a href="#[93]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_SetIC1Prescal
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI4Config
<LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI3Config
<LI><a href="#[94]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI2Config
<LI><a href="#[92]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TI1Config
</UL>
<BR>[Called By]<UL><LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_setup
</UL>

<P><STRONG><a name="[8c]"></a>TMR_ReadCaputer4</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, apm32f0xx_tmr.o(i.TMR_ReadCaputer4))
<BR><BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR2_IRQHandler
</UL>

<P><STRONG><a name="[8a]"></a>TMR_ReadIntFlag</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, apm32f0xx_tmr.o(i.TMR_ReadIntFlag))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR3_IRQHandler
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR2_IRQHandler
<LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR14_IRQHandler
</UL>

<P><STRONG><a name="[a7]"></a>TMR_SetCounter</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, apm32f0xx_tmr.o(i.TMR_SetCounter))
<BR><BR>[Called By]<UL><LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_Dis
</UL>

<P><STRONG><a name="[93]"></a>TMR_SetIC1Prescal</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, apm32f0xx_tmr.o(i.TMR_SetIC1Prescal))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TMR_SetIC1Prescal
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ICConfig
</UL>

<P><STRONG><a name="[95]"></a>TMR_SetIC2Prescal</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, apm32f0xx_tmr.o(i.TMR_SetIC2Prescal))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TMR_SetIC2Prescal
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ICConfig
</UL>

<P><STRONG><a name="[97]"></a>TMR_SetIC3Prescal</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, apm32f0xx_tmr.o(i.TMR_SetIC3Prescal))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TMR_SetIC3Prescal
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ICConfig
</UL>

<P><STRONG><a name="[99]"></a>TMR_SetIC4Prescal</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, apm32f0xx_tmr.o(i.TMR_SetIC4Prescal))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = TMR_SetIC4Prescal
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ICConfig
</UL>

<P><STRONG><a name="[20]"></a>USART1_IRQHandler</STRONG> (Thumb, 144 bytes, Stack size 24 bytes, apm32f0xx_int.o(i.USART1_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = USART1_IRQHandler &rArr; __aeabi_ui2d &rArr; _double_epilogue &rArr; __aeabi_llsr
</UL>
<BR>[Calls]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_RxData
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReadStatusFlag
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_Enable
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_Disable
<LI><a href="#[34]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ui2d
<LI><a href="#[32]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_ddiv
<LI><a href="#[36]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2uiz
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_apm32f051.o(RESET)
</UL>
<P><STRONG><a name="[9b]"></a>USART1_Init</STRONG> (Thumb, 134 bytes, Stack size 32 bytes, setup.o(i.USART1_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 132<LI>Call Chain = USART1_Init &rArr; USART_Config &rArr; RCM_ReadUSART2CLKFreq &rArr; RCM_ReadPCLKFreq &rArr; RCM_ReadSYSCLKFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_EnableAPB2PeriphClock
<LI><a href="#[3b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ConfigPinAF
<LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Config
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQRequest
<LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_EnableInterrupt
<LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Enable
<LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_Band_Handler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[9c]"></a>USART_Config</STRONG> (Thumb, 154 bytes, Stack size 32 bytes, apm32f0xx_usart.o(i.USART_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = USART_Config &rArr; RCM_ReadUSART2CLKFreq &rArr; RCM_ReadPCLKFreq &rArr; RCM_ReadSYSCLKFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[71]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_ReadUSART2CLKFreq
<LI><a href="#[70]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_ReadUSART1CLKFreq
<LI><a href="#[6e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_ReadPCLKFreq
<LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init
</UL>

<P><STRONG><a name="[9e]"></a>USART_Enable</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, apm32f0xx_usart.o(i.USART_Enable))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init
</UL>

<P><STRONG><a name="[9d]"></a>USART_EnableInterrupt</STRONG> (Thumb, 74 bytes, Stack size 0 bytes, apm32f0xx_usart.o(i.USART_EnableInterrupt))
<BR><BR>[Called By]<UL><LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init
</UL>

<P><STRONG><a name="[7a]"></a>USART_ReadStatusFlag</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, apm32f0xx_usart.o(i.USART_ReadStatusFlag))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Write
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Return_SetBand
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
<LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[9a]"></a>USART_RxData</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, apm32f0xx_usart.o(i.USART_RxData))
<BR><BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_IRQHandler
</UL>

<P><STRONG><a name="[9f]"></a>USART_TxData</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, apm32f0xx_usart.o(i.USART_TxData))
<BR><BR>[Called By]<UL><LI><a href="#[76]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_Write
<LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;fputc
</UL>

<P><STRONG><a name="[76]"></a>USART_Write</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, func.o(i.USART_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = USART_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_TxData
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReadStatusFlag
</UL>
<BR>[Called By]<UL><LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Return_SetBand
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Return_SetAddr
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Return_GetTemp
<LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Return_GetDis
</UL>

<P><STRONG><a name="[a0]"></a>__0printf$1</STRONG> (Thumb, 24 bytes, Stack size 24 bytes, printf1.o(i.__0printf$1), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_printf_core
</UL>

<P><STRONG><a name="[c3]"></a>__1printf$1</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf1.o(i.__0printf$1), UNUSED)

<P><STRONG><a name="[60]"></a>__2printf</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, printf1.o(i.__0printf$1))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __2printf
</UL>
<BR>[Called By]<UL><LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readPage
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_Temp
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Return_GetTemp
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_Protocol_Parse
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR2_IRQHandler
<LI><a href="#[3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SVC_Handler
<LI><a href="#[4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
<LI><a href="#[1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
<LI><a href="#[2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>

<P><STRONG><a name="[38]"></a>__ARM_clz</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, depilogue.o(i.__ARM_clz))
<BR><BR>[Called By]<UL><LI><a href="#[35]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_double_epilogue
</UL>

<P><STRONG><a name="[8d]"></a>__ARM_common_ll_muluu</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, apm32f0xx_int.o(i.__ARM_common_ll_muluu))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __ARM_common_ll_muluu
</UL>
<BR>[Called By]<UL><LI><a href="#[15]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR2_IRQHandler
</UL>

<P><STRONG><a name="[8e]"></a>__ARM_common_switch8</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, apm32f0xx_int.o(i.__ARM_common_switch8))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __ARM_common_switch8
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_Band_Handler
<LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR3_IRQHandler
</UL>

<P><STRONG><a name="[c4]"></a>__scatterload_copy</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_copy), UNUSED)

<P><STRONG><a name="[c5]"></a>__scatterload_null</STRONG> (Thumb, 2 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_null), UNUSED)

<P><STRONG><a name="[c6]"></a>__scatterload_zeroinit</STRONG> (Thumb, 14 bytes, Stack size unknown bytes, handlers.o(i.__scatterload_zeroinit), UNUSED)

<P><STRONG><a name="[a2]"></a>appFlagInit</STRONG> (Thumb, 58 bytes, Stack size 40 bytes, main.o(i.appFlagInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = appFlagInit &rArr; FMC_ProgramWord &rArr; FMC_WaitForReady
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_Unlock
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_ProgramWord
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_Lock
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_ErasePage
<LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[67]"></a>clear_RxMessage</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, df_protocol.o(i.clear_RxMessage))
<BR><BR>[Called By]<UL><LI><a href="#[58]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Load_RxMessage
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[26]"></a>fputc</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, main.o(i.fputc))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = fputc
</UL>
<BR>[Calls]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_TxData
<LI><a href="#[7a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART_ReadStatusFlag
</UL>
<BR>[Address Reference Count : 1]<UL><LI> printf1.o(i.__0printf$1)
</UL>
<P><STRONG><a name="[ad]"></a>free</STRONG> (Thumb, 80 bytes, Stack size 8 bytes, malloc.o(i.free))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = free
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writePage
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readPage
</UL>

<P><STRONG><a name="[a6]"></a>get_Dis</STRONG> (Thumb, 374 bytes, Stack size 16 bytes, func.o(i.get_Dis))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = get_Dis &rArr; SetVs &rArr; ADC_setup &rArr; GPIO_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[3d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_Config
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearBit
<LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQRequest
<LI><a href="#[88]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQRequest
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_SetCounter
<LI><a href="#[50]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_EnableInterrupt
<LI><a href="#[52]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_Enable
<LI><a href="#[87]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_DisableInterrupt
<LI><a href="#[86]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_DisableCCxChannel
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_Disable
<LI><a href="#[91]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ClearStatusFlag
<LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ClearIntFlag
<LI><a href="#[55]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_Enable
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_Disable
<LI><a href="#[40]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;COMP_Disable
<LI><a href="#[7c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SetVs
<LI><a href="#[7b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Send_40K
</UL>
<BR>[Called By]<UL><LI><a href="#[5a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_Dis_Handler
<LI><a href="#[23]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[5a]"></a>get_Dis_Handler</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, func.o(i.get_Dis_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = get_Dis_Handler &rArr; get_Dis &rArr; SetVs &rArr; ADC_setup &rArr; GPIO_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[74]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Return_GetDis
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_Dis
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_Protocol_Parse
</UL>

<P><STRONG><a name="[a9]"></a>get_Temp</STRONG> (Thumb, 300 bytes, Stack size 48 bytes, func.o(i.get_Temp))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = get_Temp &rArr; ADC_setup &rArr; GPIO_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_DisableAPB2PeriphClock
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBit
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearBit
<LI><a href="#[7f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StopConversion
<LI><a href="#[7d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_StartConversion
<LI><a href="#[41]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_Reset
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_ReadConversionValue
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memclr4
<LI><a href="#[29]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_idivmod
<LI><a href="#[44]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_setup
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APM_EVAL_DelayMs
</UL>
<BR>[Called By]<UL><LI><a href="#[5b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_Temp_Handler
</UL>

<P><STRONG><a name="[5b]"></a>get_Temp_Handler</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, func.o(i.get_Temp_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = get_Temp_Handler &rArr; get_Temp &rArr; ADC_setup &rArr; GPIO_Config
</UL>
<BR>[Calls]<UL><LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_Temp
<LI><a href="#[77]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Return_GetTemp
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_Protocol_Parse
</UL>

<P><STRONG><a name="[23]"></a>main</STRONG> (Thumb, 146 bytes, Stack size 0 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 156<LI>Call Chain = main &rArr; DF_Protocol_Parse &rArr; set_Band_Handler &rArr; USART1_Init &rArr; USART_Config &rArr; RCM_ReadUSART2CLKFreq &rArr; RCM_ReadPCLKFreq &rArr; RCM_ReadSYSCLKFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[45]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RCM_EnableAPB2PeriphClock
<LI><a href="#[59]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_SetBit
<LI><a href="#[5e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_ClearBit
<LI><a href="#[84]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_Disable
<LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;get_Dis
<LI><a href="#[67]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clear_RxMessage
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init
<LI><a href="#[89]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER3_setup
<LI><a href="#[83]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIMER2_setup
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Restore_Check
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parameters_Setup
<LI><a href="#[65]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;GPIO_setup
<LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_Protocol_Parse
<LI><a href="#[53]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DAC_setup
<LI><a href="#[4d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APM_EVAL_TMR14_Init
<LI><a href="#[73]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APM_EVAL_DelayMs
<LI><a href="#[4b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;APM_EVAL_DelayInit
<LI><a href="#[3a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ACMP_setup
<LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;appFlagInit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> entry9a.o(.ARM.Collect$$$$0000000B)
</UL>
<P><STRONG><a name="[ab]"></a>malloc</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, malloc.o(i.malloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = malloc
</UL>
<BR>[Called By]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writePage
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readPage
</UL>

<P><STRONG><a name="[5f]"></a>mystrstr</STRONG> (Thumb, 72 bytes, Stack size 12 bytes, func.o(i.mystrstr))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = mystrstr
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_Protocol_Parse
</UL>

<P><STRONG><a name="[6a]"></a>readPage</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, func.o(i.readPage))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = readPage &rArr; __2printf
</UL>
<BR>[Calls]<UL><LI><a href="#[60]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__2printf
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_Band_Handler
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_Addr_Handler
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parameters_Setup
</UL>

<P><STRONG><a name="[5c]"></a>set_Addr_Handler</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, func.o(i.set_Addr_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = set_Addr_Handler &rArr; Return_SetAddr &rArr; USART_Write
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writePage
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readPage
<LI><a href="#[78]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Return_SetAddr
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_Protocol_Parse
</UL>

<P><STRONG><a name="[5d]"></a>set_Band_Handler</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, func.o(i.set_Band_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 148<LI>Call Chain = set_Band_Handler &rArr; USART1_Init &rArr; USART_Config &rArr; RCM_ReadUSART2CLKFreq &rArr; RCM_ReadPCLKFreq &rArr; RCM_ReadSYSCLKFreq &rArr; __aeabi_uidivmod
</UL>
<BR>[Calls]<UL><LI><a href="#[6d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writePage
<LI><a href="#[6a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readPage
<LI><a href="#[79]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Return_SetBand
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;USART1_Init
<LI><a href="#[8e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__ARM_common_switch8
<LI><a href="#[6c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uwrite4
</UL>
<BR>[Called By]<UL><LI><a href="#[57]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DF_Protocol_Parse
</UL>

<P><STRONG><a name="[6d]"></a>writePage</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, func.o(i.writePage))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = writePage &rArr; FMC_ProgramWord &rArr; FMC_WaitForReady
</UL>
<BR>[Calls]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_Unlock
<LI><a href="#[63]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_ProgramWord
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_Lock
<LI><a href="#[61]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_ErasePage
<LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
<LI><a href="#[ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[5d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_Band_Handler
<LI><a href="#[5c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;set_Addr_Handler
<LI><a href="#[72]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Restore_Check
<LI><a href="#[69]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Parameters_Setup
</UL>
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[92]"></a>TI1Config</STRONG> (Thumb, 88 bytes, Stack size 20 bytes, apm32f0xx_tmr.o(i.TI1Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TI1Config
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ICConfig
</UL>

<P><STRONG><a name="[94]"></a>TI2Config</STRONG> (Thumb, 102 bytes, Stack size 20 bytes, apm32f0xx_tmr.o(i.TI2Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TI2Config
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ICConfig
</UL>

<P><STRONG><a name="[96]"></a>TI3Config</STRONG> (Thumb, 92 bytes, Stack size 20 bytes, apm32f0xx_tmr.o(i.TI3Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TI3Config
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ICConfig
</UL>

<P><STRONG><a name="[98]"></a>TI4Config</STRONG> (Thumb, 106 bytes, Stack size 20 bytes, apm32f0xx_tmr.o(i.TI4Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = TI4Config
</UL>
<BR>[Called By]<UL><LI><a href="#[85]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TMR_ICConfig
</UL>

<P><STRONG><a name="[68]"></a>NVIC_SetPriority</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, apm32f0xx_misc.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[51]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQRequest
</UL>

<P><STRONG><a name="[82]"></a>SystemClock48M</STRONG> (Thumb, 210 bytes, Stack size 0 bytes, system_apm32f0xx.o(i.SystemClock48M))
<BR><BR>[Called By]<UL><LI><a href="#[81]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClockConfig
</UL>

<P><STRONG><a name="[81]"></a>SystemClockConfig</STRONG> (Thumb, 8 bytes, Stack size 8 bytes, system_apm32f0xx.o(i.SystemClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SystemClockConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[82]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock48M
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemInit
</UL>

<P><STRONG><a name="[a1]"></a>_printf_core</STRONG> (Thumb, 332 bytes, Stack size 88 bytes, printf1.o(i._printf_core), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[2a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_uidivmod
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__0printf$1
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
